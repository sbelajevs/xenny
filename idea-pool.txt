Version 0.0.3:
 === Focus on helping to play more efficiently ===
 - Consider generating only 100% solvable games
 - Implement special case of "undo" that undoes until a chosen card is moved
 - Do some simple game-over checks
 - Research brute-forcing for checking game-over cases, check if it won't drain laptop battery too much

version 0.0.4:
 === Focus on user experience, resizing game window ===
 - Replace glfw/OpenGL with custom-made-code/DirectX
 - Use distance fields to generate ideal border around cards at any scale
 - Try optimizing rendering - batch render calls, sort rectangles and don't draw many of them at one place
 - Module separation - OS module as executable and game module as .dll
 - Allow to resize window and scale graphics in a smart way, make game layout more generic
 - Add keyboard shortcuts for controling window and control buttons
 
version 0.0.5:
 === Focus on stability and small tweaks ===
 - Add logging and all kinds of error checking to the OS module
 - Add lots of debug assertions and run the game in debug mode
 - Show "Are you sure?" when "New game" is pressed
 - Fix remaining FPS issues
 - Do something with max allowed moves in game history
 - Show amount of cards left in the stock/waste

Version 0.0.6
 === Focus on making the game more juicy ===
 - Implement (full) undo/redo animation
 - Implement end game animation
 - Add some shaking animation when something cannot be done
 - Change mouse cursor pointers depending on screen position
 - Add motion blur effect and evaluate if it is cool
 - Think how to implement hints if user is stuck

Version 0.1
 === Focus on adding new games ===
 - Implement a simple GUI framework, refactor existing code
 - Add different Klondaike types of game

Version 0.2
 === Focus on adding even more games ===
 - Add other more or less popular types of patience games

Version 0.3
 === Focus on adding new type of game ===
 - Add bubble shooter game, just for lulz

Must-have features that are not yet planned:
 - Add some statistics saving for each type of game
 - Add recommendations to try new games and "Try something new" button
 - Check if user uses shortcuts and inform them about their existance
 - Add threading and optimizations to get rid of possible hanging
 - Do lots of refactoring (focus on modularity and cohesion)
 - Some general improvements to graphics, UI and UX
 - Add some simple sound effects? (Uh-oh for no-more-moves, ticks for card picking, something for dealing)
 - Consider adding background noises for relaxation, see mynoise.net for nice(?) examples
 - Implement unicode support? Add localizations
 - Start thinking about analytics that will be sent to the server (if any)
 - Think about settings - what can user tweak (music/sound volume, colors, skins, animation speed).
